/*
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 * 
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 * 
 * For more information, please refer to <http://unlicense.org/>
 */
package demo;

import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 * Main application form.
 * 
 * @author Aleksandar Ružičić
 */
public class Demo extends javax.swing.JFrame {

    private MapDesigner designer;

    /** Creates new form Demo */
    public Demo() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            ex.printStackTrace(System.err);
        } finally {

            initComponents();

            designer = new MapDesigner(20, 20);
            mapContainer.setViewportView(designer);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        brushGroup = new javax.swing.ButtonGroup();
        heuristicGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        txtWidth = new javax.swing.JTextField();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        btnResize = new javax.swing.JButton();
        btnWall = new javax.swing.JRadioButton();
        btnSand = new javax.swing.JRadioButton();
        btnMud = new javax.swing.JRadioButton();
        btnGrass = new javax.swing.JRadioButton();
        btnPlayer = new javax.swing.JRadioButton();
        btnTarget = new javax.swing.JRadioButton();
        btnClear = new javax.swing.JButton();
        btnFindPath = new javax.swing.JButton();
        chkDiagonal = new javax.swing.JCheckBox();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        btnManhattan = new javax.swing.JRadioButton();
        btnEuclidean = new javax.swing.JRadioButton();
        btnDiagonal = new javax.swing.JRadioButton();
        mapContainer = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PathFinder Demo");
        setName("Form"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Controls"));
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText("Map width:");
        jLabel1.setName("jLabel1"); // NOI18N

        txtWidth.setText("20");
        txtWidth.setName("txtWidth"); // NOI18N

        jLabel2.setText("Map height:");
        jLabel2.setName("jLabel2"); // NOI18N

        txtHeight.setText("20");
        txtHeight.setName("txtHeight"); // NOI18N

        btnResize.setText("Resize");
        btnResize.setName("btnResize"); // NOI18N
        btnResize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResizeActionPerformed(evt);
            }
        });

        brushGroup.add(btnWall);
        btnWall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_wall.png"))); // NOI18N
        btnWall.setName("btnWall"); // NOI18N
        btnWall.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_wall_selected.png"))); // NOI18N
        btnWall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBrushSelected(evt);
            }
        });

        brushGroup.add(btnSand);
        btnSand.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_sand.png"))); // NOI18N
        btnSand.setName("btnSand"); // NOI18N
        btnSand.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_sand_selected.png"))); // NOI18N
        btnSand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBrushSelected(evt);
            }
        });

        brushGroup.add(btnMud);
        btnMud.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_mud.png"))); // NOI18N
        btnMud.setName("btnMud"); // NOI18N
        btnMud.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_mud_selected.png"))); // NOI18N
        btnMud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBrushSelected(evt);
            }
        });

        brushGroup.add(btnGrass);
        btnGrass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_grass.png"))); // NOI18N
        btnGrass.setName("btnGrass"); // NOI18N
        btnGrass.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_grass_selected.png"))); // NOI18N
        btnGrass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBrushSelected(evt);
            }
        });

        brushGroup.add(btnPlayer);
        btnPlayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_player.png"))); // NOI18N
        btnPlayer.setName("btnPlayer"); // NOI18N
        btnPlayer.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_player_selected.png"))); // NOI18N
        btnPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBrushSelected(evt);
            }
        });

        brushGroup.add(btnTarget);
        btnTarget.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_target.png"))); // NOI18N
        btnTarget.setName("btnTarget"); // NOI18N
        btnTarget.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/resources/btn_target_selected.png"))); // NOI18N
        btnTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBrushSelected(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.setName("btnClear"); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnFindPath.setText("Find Path");
        btnFindPath.setName("btnFindPath"); // NOI18N
        btnFindPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindPath_onActionPerformed(evt);
            }
        });

        chkDiagonal.setText("Diagonal movement");
        chkDiagonal.setName("chkDiagonal"); // NOI18N

        jLabel3.setText("Heuristic:");
        jLabel3.setName("jLabel3"); // NOI18N

        heuristicGroup.add(btnManhattan);
        btnManhattan.setSelected(true);
        btnManhattan.setText("Manhattan");
        btnManhattan.setName("btnManhattan"); // NOI18N

        heuristicGroup.add(btnEuclidean);
        btnEuclidean.setText("Euclidean");
        btnEuclidean.setName("btnEuclidean"); // NOI18N

        heuristicGroup.add(btnDiagonal);
        btnDiagonal.setText("Diagonal");
        btnDiagonal.setName("btnDiagonal"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnResize, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(chkDiagonal)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(btnManhattan)
                            .addComponent(btnEuclidean)
                            .addComponent(btnDiagonal)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnMud)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnGrass))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnWall)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSand))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnPlayer)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnTarget))))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnFindPath, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnResize)
                .addGap(18, 18, 18)
                .addComponent(chkDiagonal)
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnManhattan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEuclidean)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDiagonal)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnWall)
                    .addComponent(btnSand))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnMud)
                    .addComponent(btnGrass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPlayer)
                    .addComponent(btnTarget))
                .addGap(18, 18, 18)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFindPath)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        mapContainer.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        mapContainer.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        mapContainer.setDoubleBuffered(true);
        mapContainer.setName("mapContainer"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(mapContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mapContainer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onBrushSelected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onBrushSelected

        final String brush = ((Component) evt.getSource()).getName().substring(3).toLowerCase();
        
        switch (brush) {
            case "grass":
                designer.setBrush(Map.GRASS);
                break;
            case "sand":
                designer.setBrush(Map.SAND);
                break;
            case "mud":
                designer.setBrush(Map.MUD);
                break;
            case "wall":
                designer.setBrush(Map.WALL);
                break;
            case "player":
                designer.setBrush(MapDesigner.PLAYER);
                break;
            case "target":
                designer.setBrush(MapDesigner.TARGET);
                break;
        }

    }//GEN-LAST:event_onBrushSelected

    private void btnFindPath_onActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindPath_onActionPerformed
        if (designer.isPaintingAllowed()) {
            try {
                
                designer.setDiagonalMovement(chkDiagonal.isSelected());

                int heuristic = Map.A_STAR_MANHATTAN;

                if (btnDiagonal.isSelected()) {
                    heuristic = Map.A_STAR_DIAGONAL;
                } else if (btnEuclidean.isSelected()) {
                    heuristic = Map.A_STAR_EUCLIDEAN;
                }

                designer.findPath(heuristic);

                btnFindPath.setText("Reset");

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            designer.reset();
            btnFindPath.setText("Find Path");
        }
    }//GEN-LAST:event_btnFindPath_onActionPerformed

    private void btnResizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResizeActionPerformed

        int width, height;

        try {
            width = Integer.parseInt(txtWidth.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Width must be a number.");
            return;
        }

        try {
            height = Integer.parseInt(txtHeight.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Height must be a number.");
            return;
        }

        designer.resizeMap(width, height);
    }//GEN-LAST:event_btnResizeActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        designer.clear();
        btnFindPath.setText("Find Path");
    }//GEN-LAST:event_btnClearActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Demo demo = new Demo();
                demo.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                demo.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup brushGroup;
    private javax.swing.JButton btnClear;
    private javax.swing.JRadioButton btnDiagonal;
    private javax.swing.JRadioButton btnEuclidean;
    private javax.swing.JButton btnFindPath;
    private javax.swing.JRadioButton btnGrass;
    private javax.swing.JRadioButton btnManhattan;
    private javax.swing.JRadioButton btnMud;
    private javax.swing.JRadioButton btnPlayer;
    private javax.swing.JButton btnResize;
    private javax.swing.JRadioButton btnSand;
    private javax.swing.JRadioButton btnTarget;
    private javax.swing.JRadioButton btnWall;
    private javax.swing.JCheckBox chkDiagonal;
    private javax.swing.ButtonGroup heuristicGroup;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane mapContainer;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtWidth;
    // End of variables declaration//GEN-END:variables
}